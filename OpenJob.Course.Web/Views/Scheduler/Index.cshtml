@model OpenJob.Course.Web.Models.SchedulerViewModel
@{
    ViewBag.Title = "Index";
}
<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#relazioni">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="relazioni" tabindex="-1" role="dialog" aria-labelledby="Tabella relazioni" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                

                @{
                    var listItems = Model.students.Select(x => new SelectListItem()
                    {
                        
                        Text = x.IdStudent.ToString(),
                        Value = x.IdStudent.ToString()
                    }).AsEnumerable();

                    var selectListStudent = new SelectList(listItems, "Text", "Value");
                }

                @Html.DropDownListFor(model => Model.IdSelectedStudent, listItems, "Select student", new {id="dropdown-student"})


                @{
                    var listItemsLesson = Model.lessons.Select(x => new SelectListItem()
                    {
                        Text = x.IdLesson.ToString(),
                        Value = x.IdLesson.ToString()
                    }).AsEnumerable();

                    var selectListLes = new SelectList(listItemsLesson);
                }

                @Html.DropDownListFor(model => Model.IdSelectedLesson, listItemsLesson, "Select Lesson", new {id="dropdown-lesson" })

                @{
                    var listItemsClass = Model.classRooms.Select(x => new SelectListItem()
                    {
                        Text = x.IdClassRoom.ToString(),
                        Value = x.IdClassRoom.ToString()
                    }).AsEnumerable();

                    var selectListCls = new SelectList(listItemsClass);
                }

                @Html.DropDownListFor(model => Model.IdSelectedClass, listItemsClass, "Select ClassRo'", new {id="dropdown-classRoom" })

          
        <button class="btn btn-primary" id="salva">Salva</button>
    </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    <script>
        $(document).ready(
            function () {
                $("#salva").on('click', function () {
                    var idStudente = $("#dropdown-student").val();
                    var idLesson = $("#dropdown-lesson").val();
                    var idClassRoom = $("#dropdown-classRoom").val();

                    $.ajax({
                        url: '@Url.Action("Create","Scheduler")',
                        type: 'POST',
                        data: {
                            idStudente: idStudente,
                            idLesson: idLesson,
                            idClass: idClassRoom
                        },
                        success: (result) => {
                            alert("Relazione salvata con successo", result);
                        },
                        error: (result) => {
                            alert("Errore durante la creazione", result);
                        }

                    });
                });
            });
    </script>